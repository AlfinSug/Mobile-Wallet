/// <reference types="node" />
import { Wallet, StdSignMsg } from './types';
export declare function randomBytes(size: number, window?: Window | null): Buffer;
export declare function getNewWalletFromSeed(mnemonic: string, bech32Prefix: string, hdPath?: string): Wallet;
export declare function getSeed(randomBytesFunc?: (size: number) => Buffer): string;
export declare function getNewWallet(randomBytesFunc: ((size: number) => Buffer) | undefined, bech32Prefix: string, hdPath?: string): Wallet;
export declare function getCosmosAddress(publicKey: Buffer, bech32Prefix: string): string;
export declare function deriveAddressFromPrivateKey(privateKey: Buffer, bech32Prefix: string): String;
export declare function signWithPrivateKey(signMessage: StdSignMsg | string, privateKey: Buffer): Buffer;
export declare function verifySignature(signMessage: StdSignMsg | string, signature: Buffer, publicKey: Buffer): boolean;
